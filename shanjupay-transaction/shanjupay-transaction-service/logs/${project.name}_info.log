[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:54,297 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelServiceImpl], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:54,328 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:54,333 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: TestPayChannelServiceImpl does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:54,680 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelServiceImpl
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:54,965 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:55,123 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@47c81abf, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@776a6d9b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@21d03963, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1f760b47, org.springframework.test.context.support.DirtiesContextTestExecutionListener@18ece7f4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3cce57c7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1cf56a1c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@33f676f6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4c5ae43b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@264f218, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3576ddc2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@35b74c5c]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:56,367 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:56,375 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:56,384 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:57,281 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4fd16aa9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:57,408 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:57,863 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:58,352 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:58,358 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:spring-boot-http.yaml,data:#HTTP格式配置
spring:
  http:
    encoding:
      charset: UTF‐8
        force: true
        enabled: true
    messages:
      encoding: UTF‐8

#tomcat头信息(用户ip和访问协议)及访问路径配置
server:
  tomcat:
    remote_ip_header: x‐forwarded‐for
    protocol_header: x‐forwarded‐proto
  servlet:
    context‐path: /
    use‐forward‐headers: true
#服务监控与管理配置，运维相关
management:
  endpoints:
    web:
      exposure:
      include: refresh,health,info,env,
mapping values are not allowed here
 in 'reader', line 6, column 14:
            force: true
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:870)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:358)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:558)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:214)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:85)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadExtConfiguration(NacosPropertySourceLocator.java:129)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:87)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:58,381 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:58,395 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:58,407 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:58,410 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:58,479 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,922 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,927 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,975 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,977 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,978 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,979 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,980 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,980 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,980 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:00:59,981 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,351 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,360 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,420 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 38ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,584 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,764 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,766 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,867 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,871 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\Java_Project\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,889 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:00,890 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:01,346 INFO [main][GenericScope.java:294] - BeanFactory id=e44d0192-7067-3bf3-9a74-89d8a05aae5e
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:01,776 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$33b767ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:01,997 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$b778b6b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,034 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,063 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,084 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,095 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,098 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,099 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$29b8532a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,109 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$bc625b82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,121 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,127 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,139 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$7ca7953c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,163 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$70729e01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,197 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$fb653130] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,214 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,218 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,581 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,588 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,615 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,624 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$48d62e0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,971 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,976 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,988 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:02,996 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,170 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,171 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,279 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,310 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,318 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$80f8f9e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,337 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,349 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$bacef5e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,360 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$8f4ae73d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,378 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$4197a956] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,390 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$fcae8f45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,400 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,410 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,426 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$237a0673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,447 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,458 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$715684cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,477 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,484 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,500 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,510 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,558 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,613 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,632 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$4deb3340] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,655 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,661 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,676 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,690 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,691 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,742 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,772 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,779 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,784 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:03,825 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4fd16aa9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:04,134 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:04,966 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:06,489 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:06,489 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:06,506 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:06,508 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:07,933 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:08,955 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:09,098 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:09,113 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:09,131 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:11,841 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,348 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,391 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,414 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,453 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,655 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,655 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,657 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,657 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=9748&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1611057672454, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:12,714 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,381 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,384 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,387 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,400 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,721 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,724 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,724 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=9748&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1611057672462, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,730 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\HSY\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.23.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=17924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1611027291920&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,731 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,750 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,800 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,809 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:13,817 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelServiceImpl in 18.476 seconds (JVM running for 21.851)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,211 INFO [Thread-12][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,212 INFO [Thread-12][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=9748&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611057672462], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,213 INFO [Thread-12][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=9748&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611057672462, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,213 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,218 INFO [Thread-12][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,219 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,219 INFO [Thread-12][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,220 INFO [Thread-12][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,222 INFO [Thread-12][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,224 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,227 INFO [Thread-12][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,228 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,229 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,230 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=9748&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057672464, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,232 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,263 INFO [Thread-12][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,278 INFO [Thread-12][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,289 INFO [Thread-12][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,290 INFO [Thread-12][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:14,292 INFO [Thread-12][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:57,019 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelServiceImpl], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:57,047 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:57,051 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: TestPayChannelServiceImpl does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:57,375 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelServiceImpl
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:57,757 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:57,825 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@638ef7ed, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4bff7da0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3f1d2e23, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@536dbea0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@47c81abf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@776a6d9b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@21d03963, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1f760b47, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@18ece7f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3cce57c7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1cf56a1c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@33f676f6]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:59,480 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:59,489 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:01:59,502 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:00,375 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$642c21ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:00,529 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:01,014 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:01,513 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:01,518 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:spring-boot-http.yaml,data:#HTTP格式配置
spring:
  http:
    encoding:
      charset: UTF‐8
        force: true
        enabled: true
    messages:
      encoding: UTF‐8

#tomcat头信息(用户ip和访问协议)及访问路径配置
server:
  tomcat:
    remote_ip_header: x‐forwarded‐for
    protocol_header: x‐forwarded‐proto
  servlet:
    context‐path: /
    use‐forward‐headers: true
#服务监控与管理配置，运维相关
management:
  endpoints:
    web:
      exposure:
      include: refresh,health,info,env,
mapping values are not allowed here
 in 'reader', line 6, column 14:
            force: true
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:870)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:358)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:558)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:214)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:85)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadExtConfiguration(NacosPropertySourceLocator.java:129)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:87)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:01,538 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:01,548 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:01,556 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:01,558 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:01,625 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,150 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,156 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,212 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,213 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,214 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,215 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,215 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,216 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,217 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,218 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,588 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,596 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,653 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:03,840 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:04,063 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:04,063 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:04,116 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:04,117 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\Java_Project\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:04,124 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:04,126 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:04,519 INFO [main][GenericScope.java:294] - BeanFactory id=e44d0192-7067-3bf3-9a74-89d8a05aae5e
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:04,858 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$48121ed1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,082 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$cbd36dd5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,127 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,158 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,185 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,196 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,198 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,199 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$3e130a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,209 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$d0bd12a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,221 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,228 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,241 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$91024c61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,253 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$84cd5526] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,278 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$fbfe855] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,296 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,301 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,680 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,689 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,724 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:05,736 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$5d30e52f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,284 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,295 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,306 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,317 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,506 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,508 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,597 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,649 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,662 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$9553b105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,679 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,690 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$cf29ad05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,702 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$a3a59e62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,733 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$55f2607b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,758 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$1109466a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,783 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,801 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,826 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$37d4bd98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,875 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,888 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$85b13bf1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,912 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,920 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,945 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:06,953 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,022 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,054 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,068 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$6245ea65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,086 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,094 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,119 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,165 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,166 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,204 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,227 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,232 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,237 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,302 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$642c21ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:07,667 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:08,446 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:10,132 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:10,133 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:10,154 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:10,155 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:11,516 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:12,495 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:12,698 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:12,713 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:12,735 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:15,653 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,065 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,102 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,116 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,170 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,401 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,402 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,404 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,404 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=10468&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1611057736176, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:16,468 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,215 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,217 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,219 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,232 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,546 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,549 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,550 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=10468&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1611057736185, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,556 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\HSY\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.23.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=17924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1611027291920&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,557 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,572 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,622 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,624 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:17,633 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelServiceImpl in 19.459 seconds (JVM running for 23.141)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,050 INFO [Thread-12][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,051 INFO [Thread-12][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=10468&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611057736185], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,052 INFO [Thread-12][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=10468&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611057736185, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,052 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,057 INFO [Thread-12][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,057 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,058 INFO [Thread-12][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,058 INFO [Thread-12][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,060 INFO [Thread-12][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,062 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,065 INFO [Thread-12][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,066 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,067 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,068 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=10468&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057736187, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,071 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,090 INFO [Thread-12][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,097 INFO [Thread-12][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,101 INFO [Thread-12][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,102 INFO [Thread-12][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:02:18,103 INFO [Thread-12][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:22,686 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelServiceImpl], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:22,718 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:22,727 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: TestPayChannelServiceImpl does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:23,112 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelServiceImpl
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:23,575 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:23,621 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@222a59e6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c7a164b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c2bb6e0, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3e62d773, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ef74c30, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7283d3eb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@638ef7ed, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4bff7da0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3f1d2e23, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@536dbea0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@47c81abf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@776a6d9b]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:25,680 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:25,690 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:25,699 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:26,601 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2c554b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:26,735 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:27,126 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:27,571 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:27,577 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:spring-boot-http.yaml,data:#HTTP格式配置
spring:
  http:
    encoding:
      charset: UTF‐8
        force: true
        enabled: true
    messages:
      encoding: UTF‐8

#tomcat头信息(用户ip和访问协议)及访问路径配置
server:
  tomcat:
    remote_ip_header: x‐forwarded‐for
    protocol_header: x‐forwarded‐proto
  servlet:
    context‐path: /
    use‐forward‐headers: true
#服务监控与管理配置，运维相关
management:
  endpoints:
    web:
      exposure:
      include: refresh,health,info,env,
mapping values are not allowed here
 in 'reader', line 6, column 14:
            force: true
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:870)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:358)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:558)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:214)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:85)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadExtConfiguration(NacosPropertySourceLocator.java:129)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:87)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:27,593 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:27,603 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:27,611 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:27,613 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:27,664 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,117 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,123 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,175 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,176 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,177 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,178 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,179 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,180 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,181 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,181 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,514 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,518 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,559 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,724 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,885 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,886 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,961 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,962 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\Java_Project\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,966 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:29,967 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,359 INFO [main][GenericScope.java:294] - BeanFactory id=e44d0192-7067-3bf3-9a74-89d8a05aae5e
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,705 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e6ab51ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,871 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$6a6ca0be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,900 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,933 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,948 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,957 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,959 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,960 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$dcac3d38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,969 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$6f564590] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,981 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:30,989 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,000 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$2f9b7f4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,012 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$2366880f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,034 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$ae591b3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,049 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,055 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,476 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,487 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,515 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,524 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$fbca1818] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,900 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,904 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,912 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:31,917 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,036 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,037 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,093 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,124 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,136 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$33ece3ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,183 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,198 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$6dc2dfee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,209 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$423ed14b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,223 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$f48b9364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,232 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$afa27953] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,243 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,254 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,270 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$d66df081] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,294 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,302 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$244a6eda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,322 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,329 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,347 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,359 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,415 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,445 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,457 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$df1d4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,472 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,476 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,489 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,500 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,501 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,530 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,557 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,562 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,571 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,610 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2c554b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:32,924 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:33,634 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:35,020 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:35,021 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:35,037 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:35,038 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:36,475 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:37,497 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:37,657 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:37,672 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:37,699 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:40,558 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,090 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,145 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,180 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,224 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,573 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,574 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,576 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,578 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=12540&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1611057881226, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:41,663 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,415 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,417 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,419 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,433 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,755 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,758 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,758 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=12540&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1611057881236, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,764 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\HSY\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.23.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=17924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1611027291920&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,765 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,781 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,828 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,834 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:42,844 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelServiceImpl in 19.091 seconds (JVM running for 22.509)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,247 INFO [Thread-12][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,250 INFO [Thread-12][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=12540&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611057881236], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,251 INFO [Thread-12][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=12540&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611057881236, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,252 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,256 INFO [Thread-12][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,257 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,257 INFO [Thread-12][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,257 INFO [Thread-12][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,259 INFO [Thread-12][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,261 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,264 INFO [Thread-12][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,265 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,268 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,269 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=12540&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057881239, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,275 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,299 INFO [Thread-12][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,307 INFO [Thread-12][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,316 INFO [Thread-12][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,317 INFO [Thread-12][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:04:43,319 INFO [Thread-12][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:47,533 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelServiceImpl], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:47,565 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:47,567 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: TestPayChannelServiceImpl does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:47,970 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelServiceImpl
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:48,335 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:48,384 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3f1d2e23, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@536dbea0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@47c81abf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@776a6d9b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@21d03963, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1f760b47, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@18ece7f4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3cce57c7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cf56a1c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@33f676f6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4c5ae43b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@264f218]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:49,601 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:49,611 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:49,623 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:50,527 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6d37e2c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:50,674 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:51,074 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:51,666 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:51,671 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:spring-boot-http.yaml,data:#HTTP格式配置
spring:
  http:
    encoding:
      charset: UTF‐8
        force: true
        enabled: true
    messages:
      encoding: UTF‐8

#tomcat头信息(用户ip和访问协议)及访问路径配置
server:
  tomcat:
    remote_ip_header: x‐forwarded‐for
    protocol_header: x‐forwarded‐proto
  servlet:
    context‐path: /
    use‐forward‐headers: true
#服务监控与管理配置，运维相关
management:
  endpoints:
    web:
      exposure:
      include: refresh,health,info,env,
mapping values are not allowed here
 in 'reader', line 6, column 14:
            force: true
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:870)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:358)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:558)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:214)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:85)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadExtConfiguration(NacosPropertySourceLocator.java:129)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:87)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:51,697 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:51,709 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:51,716 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:51,718 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:51,798 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,335 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,344 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,445 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,447 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,448 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,450 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,450 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,451 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,451 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,452 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,766 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,771 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,815 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:53,965 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:54,131 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:54,132 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:54,189 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:54,190 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\Java_Project\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:54,195 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:54,195 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:54,583 INFO [main][GenericScope.java:294] - BeanFactory id=e44d0192-7067-3bf3-9a74-89d8a05aae5e
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:54,943 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$511ddfca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,165 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$d4df2ece] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,210 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,239 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,263 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,274 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,277 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,278 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$471ecb48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,287 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$d9c8d3a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,298 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,304 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,315 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$9a0e0d5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,329 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$8dd9161f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,353 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$18cba94e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,370 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,378 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,833 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,843 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,880 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:55,890 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$663ca628] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,269 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,276 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,286 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,296 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,496 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,496 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,619 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,660 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,667 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$9e5f71fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,683 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,695 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$d8356dfe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,718 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$acb15f5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,732 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$5efe2174] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,745 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$1a150763] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,757 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,765 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,786 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$40e07e91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,831 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,847 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$8ebcfcea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,866 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,873 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,889 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,897 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:56,986 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,015 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,033 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$6b51ab5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,050 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,056 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,066 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,082 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,083 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,110 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,125 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,131 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,137 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,175 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6d37e2c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:57,548 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:58,366 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:59,659 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:59,661 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:59,674 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:05:59,675 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:01,011 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:02,115 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:02,240 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:02,251 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:02,273 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:05,456 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,010 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,048 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,065 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,096 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,321 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,326 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,327 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,328 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=6396&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1611057966097, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:06,397 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,192 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,194 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,197 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,214 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,534 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,537 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,538 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=6396&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1611057966105, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,545 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\HSY\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.23.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=17924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1611027291920&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,545 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,563 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,604 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,607 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:07,616 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelServiceImpl in 19.067 seconds (JVM running for 22.587)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,143 INFO [Thread-12][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,144 INFO [Thread-12][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=6396&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611057966105], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,144 INFO [Thread-12][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=6396&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611057966105, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,145 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,150 INFO [Thread-12][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,151 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,151 INFO [Thread-12][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,151 INFO [Thread-12][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,154 INFO [Thread-12][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,156 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,159 INFO [Thread-12][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,159 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,160 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,161 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=6396&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611057966108, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,168 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,188 INFO [Thread-12][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,195 INFO [Thread-12][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,201 INFO [Thread-12][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,202 INFO [Thread-12][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:08,204 INFO [Thread-12][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:55,827 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelServiceImpl], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:55,863 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:55,866 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: TestPayChannelServiceImpl does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:56,255 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelServiceImpl
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:56,707 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:56,793 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@222a59e6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c7a164b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c2bb6e0, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3e62d773, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ef74c30, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7283d3eb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@638ef7ed, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4bff7da0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3f1d2e23, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@536dbea0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@47c81abf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@776a6d9b]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:57,912 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:57,921 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:57,934 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:58,763 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d657e6f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:58,899 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:59,301 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:59,763 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:59,768 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:spring-boot-http.yaml,data:#HTTP格式配置
spring:
  http:
    encoding:
      charset: UTF‐8
        force: true
        enabled: true
    messages:
      encoding: UTF‐8

#tomcat头信息(用户ip和访问协议)及访问路径配置
server:
  tomcat:
    remote_ip_header: x‐forwarded‐for
    protocol_header: x‐forwarded‐proto
  servlet:
    context‐path: /
    use‐forward‐headers: true
#服务监控与管理配置，运维相关
management:
  endpoints:
    web:
      exposure:
      include: refresh,health,info,env,
mapping values are not allowed here
 in 'reader', line 6, column 14:
            force: true
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:870)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:358)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:558)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:214)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:85)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadExtConfiguration(NacosPropertySourceLocator.java:129)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:87)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:59,789 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:59,804 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:59,811 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:59,814 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:06:59,918 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,574 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,586 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,675 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,677 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,677 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,679 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,681 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,682 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,683 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:01,684 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,004 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,009 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,054 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,219 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,408 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,410 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,503 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,504 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\Java_Project\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,513 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:02,514 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,005 INFO [main][GenericScope.java:294] - BeanFactory id=e44d0192-7067-3bf3-9a74-89d8a05aae5e
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,351 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba3de3fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,526 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$3dff32fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,572 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,606 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,631 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,645 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,652 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,653 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$b03ecf78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,667 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$42e8d7d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,704 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,716 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,725 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$32e118a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,737 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f6f91a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,758 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$81ebad7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,771 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:03,776 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,165 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,172 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,202 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,208 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$cf5caa58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,598 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,602 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,612 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,619 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,757 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,758 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,819 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,853 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,868 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$77f762e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,891 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,905 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$4155722e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,919 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$15d1638b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,938 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$c81e25a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,955 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$83350b93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,972 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:04,990 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,009 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$aa0082c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,050 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,066 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$f7dd011a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,090 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,100 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,117 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,138 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,259 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,334 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,360 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$d471af8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,388 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,422 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,449 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,501 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,506 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,619 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,655 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,662 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,674 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:05,765 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d657e6f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:06,199 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:07,122 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:08,753 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:08,754 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:08,767 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:08,768 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:10,187 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:11,023 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:11,189 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:11,217 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:11,262 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,096 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,566 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,601 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,617 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,653 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,863 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,865 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,867 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,868 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=880&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1611058034659, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:14,939 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:15,757 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:15,760 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:15,762 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:15,773 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,090 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,093 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,094 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=880&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1611058034668, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,125 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\HSY\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.23.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=17924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1611027291920&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,126 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,149 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,205 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,211 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,229 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelServiceImpl in 19.243 seconds (JVM running for 22.586)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,820 INFO [Thread-12][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,821 INFO [Thread-12][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=880&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611058034668], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,821 INFO [Thread-12][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=880&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611058034668, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,823 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,830 INFO [Thread-12][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,830 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,830 INFO [Thread-12][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,831 INFO [Thread-12][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,832 INFO [Thread-12][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,834 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,837 INFO [Thread-12][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,837 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,838 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,839 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=880&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058034671, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,841 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,868 INFO [Thread-12][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,875 INFO [Thread-12][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,883 INFO [Thread-12][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,884 INFO [Thread-12][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:07:16,885 INFO [Thread-12][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:27,766 INFO [main][AbstractTestContextBootstrapper.java:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.shanjupay.transaction.TestPayChannelServiceImpl], using SpringBootContextLoader
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:27,806 INFO [main][AbstractContextLoader.java:264] - Could not detect default resource locations for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: no resource found for suffixes {-context.xml, Context.groovy}.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:27,809 INFO [main][AnnotationConfigContextLoaderUtils.java:83] - Could not detect default configuration classes for test class [com.shanjupay.transaction.TestPayChannelServiceImpl]: TestPayChannelServiceImpl does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:28,149 INFO [main][SpringBootTestContextBootstrapper.java:247] - Found @SpringBootConfiguration com.shanjupay.transaction.TransactionBootstrap for test class com.shanjupay.transaction.TestPayChannelServiceImpl
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:28,510 INFO [main][AbstractTestContextBootstrapper.java:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:28,562 INFO [main][AbstractTestContextBootstrapper.java:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@222a59e6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c7a164b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c2bb6e0, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3e62d773, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ef74c30, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7283d3eb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@638ef7ed, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4bff7da0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3f1d2e23, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@536dbea0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@47c81abf, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@776a6d9b]
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:30,170 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:30,180 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:30,197 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:31,037 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5e1428a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:31,244 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:31,785 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=transaction-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22250, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20893, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:32,295 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:32,301 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:spring-boot-http.yaml,data:#HTTP格式配置
spring:
  http:
    encoding:
      charset: UTF‐8
        force: true
        enabled: true
    messages:
      encoding: UTF‐8

#tomcat头信息(用户ip和访问协议)及访问路径配置
server:
  tomcat:
    remote_ip_header: x‐forwarded‐for
    protocol_header: x‐forwarded‐proto
  servlet:
    context‐path: /
    use‐forward‐headers: true
#服务监控与管理配置，运维相关
management:
  endpoints:
    web:
      exposure:
      include: refresh,health,info,env,
mapping values are not allowed here
 in 'reader', line 6, column 14:
            force: true
                 ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:870)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:358)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:558)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:214)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:236)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:227)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:215)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:85)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:123)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadExtConfiguration(NacosPropertySourceLocator.java:129)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:87)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:32,319 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:32,332 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:32,340 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'transaction-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:32,342 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='transaction-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:32,396 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,803 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,807 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,862 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,863 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,865 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,865 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,866 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,867 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,868 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:33,868 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,180 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,184 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,224 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,401 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,552 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,553 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,608 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,608 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'payChannelServiceImpl': Generic bean: class [com.shanjupay.transaction.service.PayChannelServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\Java_Project\shanjupay\shanjupay-transaction\shanjupay-transaction-service\target\classes\com\shanjupay\transaction\service\PayChannelServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,613 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,614 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:34,958 INFO [main][GenericScope.java:294] - BeanFactory id=e44d0192-7067-3bf3-9a74-89d8a05aae5e
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,286 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$41fa25a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,488 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$c5bb74a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,528 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,561 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,603 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,616 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,619 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,621 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$37fb1122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,631 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$caa5197a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,642 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,648 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,656 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$8aea5334] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,670 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$7eb55bf9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,694 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$9a7ef28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,711 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:35,721 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,108 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,118 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,149 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,156 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$5718ec02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,581 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,587 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,596 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,607 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,756 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,757 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,824 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,861 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,873 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$8f3bb7d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,892 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,904 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$c911b3d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,918 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$9d8da535] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,930 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$4fda674e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,941 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$af14d3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,952 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,962 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:36,982 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$31bcc46b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,014 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,025 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$7f9942c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,053 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,060 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,075 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,086 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,156 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,185 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,195 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$5c2df138] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,210 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,217 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,231 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,244 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,246 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,281 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,306 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,314 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,320 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,354 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5e1428a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:37,672 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:38,383 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:39,696 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:39,697 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:39,708 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:39,708 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:41,066 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:42,419 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:42,585 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:42,599 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:42,618 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:45,406 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:45,997 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:46,114 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.transaction.api.PayChannelService, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:46,183 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:46,198 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:46,408 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to local registry url : injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:46,409 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.transaction.api.PayChannelService to url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:46,410 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:46,412 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=3972&qos.enable=false&qos.port=22250&registry=spring-cloud&release=2.7.3&timestamp=1611058126200, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:46,474 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,219 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,220 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,223 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,235 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,546 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,548 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,549 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.transaction.api.PayChannelService url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&pid=3972&qos.enable=false&qos.port=22250&registry=nacos&release=2.7.3&timestamp=1611058126211, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,555 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\HSY\.dubbo\dubbo-registry-transaction-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.23.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=17924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1611027291920&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,555 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,568 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,611 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,614 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:47,624 INFO [main][StartupInfoLogger.java:59] - Started TestPayChannelServiceImpl in 18.581 seconds (JVM running for 22.177)
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,063 INFO [Thread-12][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,064 INFO [Thread-12][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=3972&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611058126211], dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,065 INFO [Thread-12][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=transaction-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=3972&qos.enable=false&qos.port=22250&release=2.7.3&timestamp=1611058126211, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,065 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,069 INFO [Thread-12][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,070 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,070 INFO [Thread-12][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,071 INFO [Thread-12][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,073 INFO [Thread-12][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20893, export /192.168.23.1:20893, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,075 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,078 INFO [Thread-12][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,078 INFO [Thread-12][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,079 INFO [Thread-12][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,080 INFO [Thread-12][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.23.1:20893/com.shanjupay.transaction.api.PayChannelService?anyhost=true&application=transaction-service&bean.name=ServiceBean:com.shanjupay.transaction.api.PayChannelService&bind.ip=192.168.23.1&bind.port=20893&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.transaction.api.PayChannelService&methods=queryPlatformChannel,bindPlatformChannelForApp,queryPayChannelByPlatformChannel,queryAppBindPlatformChannel&pid=3972&qos.enable=false&qos.port=22250&register=true&release=2.7.3&side=provider&timestamp=1611058126215, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,081 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.23.1
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,100 INFO [Thread-12][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,108 INFO [Thread-12][DruidDataSource.java:1885] - {dataSource-1} closing ...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,115 INFO [Thread-12][DruidDataSource.java:1955] - {dataSource-1} closed
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,116 INFO [Thread-12][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[${project.name}][${env:SERVER_PORT}] 2021-01-19 20:08:48,116 INFO [Thread-12][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
